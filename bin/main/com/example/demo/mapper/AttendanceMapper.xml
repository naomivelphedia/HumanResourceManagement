<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.AttendanceMapper">

	<select id="findTable"
		resultType="string">
		SELECT relname FROM pg_class WHERE relkind = 'r' AND relname = '${tableName}'
	</select>

	<update id="createTable" parameterType="string">
		create table ${tableName} (
		id serial primary key,
		user_id integer not null,
		date_id integer not null,
		work_division_id integer,
		work_start varchar(255) default '00:00',
		work_end varchar(255) default '00:00',
		break_time integer default 0,
		remarks varchar(255),
		approval varchar(3)
		);

		alter table ${tableName} add constraint user_date${currentYearMonth} unique(user_id, date_id);
	</update>

	<delete id="deleteTable">
		drop table ${tableName}
	</delete>

	<insert id="upsert">
		insert into ${tableName} (
		user_id,
		date_id,
		work_division_id,
		work_start,
		work_end,
		break_time,
		remarks,
		approval
		)
		values (
		#{attendance.user_id},
		#{attendance.date_id},
		#{attendance.work_division_id},
		#{attendance.work_start},
		#{attendance.work_end},
		#{attendance.break_time},
		#{attendance.remarks},
		#{attendance.approval}
		)
		ON CONFLICT (user_id, date_id)
		do update set
		work_division_id = #{attendance.work_division_id},
		work_start = #{attendance.work_start},
		work_end = #{attendance.work_end},
		break_time = #{attendance.break_time},
		remarks = #{attendance.remarks},
		approval = #{attendance.approval}
	</insert>

	<select id="getUserAttendance"
		resultType="com.example.demo.entity.Attendance">
		select
		*
		from
		${tableName}
		where
		user_id = #{id}
		order by id
	</select>

	<select id="getWorkStart"
		resultType="string">
		<!-- resultType="com.example.demo.entity.Attendance"> -->
		select
		work_start
		from
		${tableName}
		where
		user_id = #{id}
		and
		date_id between #{begin} and #{end}
		order by id
	</select>

	<select id="getWorkEnd"
		resultType="string">
		<!-- resultType="com.example.demo.entity.Attendance"> -->
		select
		work_end
		from
		${tableName}
		where
		user_id = #{id}
		and
		date_id between #{begin} and #{end}
		order by id
	</select>

	<select id="getBreakTime"
		resultType="integer">
		<!-- resultType="com.example.demo.entity.Attendance"> -->
		select
		break_time
		from
		${tableName}
		where
		user_id = #{id}
		and
		date_id between #{begin} and #{end}
		order by id
	</select>

	<select id="getWorkDivisionSelectId"
		resultType="integer">
		select
		id
		from
		work_division
	</select>
	<select id="getWorkDivisionName"
		resultType="string">
		select
		name
		from
		work_division
	</select>
	<select id="getWorkDivisionAddclass"
		resultType="string">
		select
		addclass
		from
		work_division
	</select>

	<select id="getWorkDivisionIdList"
		resultType="integer">
		select
		work_division_id
		from
		${tableName}
		where
		user_id = #{id}
		and
		date_id between #{begin} and #{end}
		order by id
	</select>

	<select id="getRemarks"
		resultType="string">
		select
		remarks
		from
		${tableName}
		where
		user_id = #{id}
		and
		date_id between #{begin} and #{end}
		order by id
	</select>

	<select id="getApproval"
		resultType="string">
		select
		approval
		from
		${tableName}
		where
		user_id = #{id}
		and
		date_id between #{begin} and #{end}
		order by id
	</select>

</mapper>